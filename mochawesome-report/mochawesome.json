{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2022-09-02T18:28:33.799Z",
    "end": "2022-09-02T18:28:56.980Z",
    "duration": 23181,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "47a4a49e-e4d7-4e23-93c0-0ad8622cf88f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2874aaea-3698-4a9b-889d-ce9957a97846",
          "title": "add todo tests",
          "fullFile": "D:\\JSProjects\\SeleniumDemo\\test\\firstTest.js",
          "file": "\\test\\firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to application",
              "fullTitle": "add todo tests successfully adds a todo to application",
              "timedOut": null,
              "duration": 14126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser(\"chrome\").build();\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add todo\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (v) {\n    return v;\n  });\n  //assert using node\n  // assert.strictEqual(todoText,\"Learn Selenium\")\n  //assert using chai\n  todoText.should.equal(\"Learn Selenium\");\n//close browser\nawait driver.quit();",
              "err": {},
              "uuid": "de2c7f26-ba29-4f5b-919a-5e75e7a812a7",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de2c7f26-ba29-4f5b-919a-5e75e7a812a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14126,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "3b6b21c1-5b19-4283-8cb8-eac2bee68137",
          "title": "add 2 nd todo tests",
          "fullFile": "D:\\JSProjects\\SeleniumDemo\\test\\secondTest.js",
          "file": "\\test\\secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1st test in second Test",
              "fullTitle": "add 2 nd todo tests 1st test in second Test",
              "timedOut": null,
              "duration": 14161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser(\"chrome\").build();\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add todo\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (v) {\n    return v;\n  });\n  //assert using node\n  // assert.strictEqual(todoText,\"Learn Selenium\")\n  //assert using chai\n  todoText.should.equal(\"Learn Selenium\");\n//close browser\nawait driver.quit();",
              "err": {},
              "uuid": "c74a075d-ed8a-4b3f-a2e2-82f0df18db0d",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "2nd test in second Test",
              "fullTitle": "add 2 nd todo tests 2nd test in second Test",
              "timedOut": null,
              "duration": 3734,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser(\"chrome\").build();\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add todo\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (v) {\n    return v;\n  });\n  //assert using node\n  // assert.strictEqual(todoText,\"Learn Selenium\")\n  //assert using chai\n  todoText.should.equal(\"Learn Javascript\");\n//close browser\nawait driver.quit();",
              "err": {
                "message": "AssertionError: expected 'Learn Selenium' to equal 'Learn Javascript'",
                "estack": "AssertionError: expected 'Learn Selenium' to equal 'Learn Javascript'\n    at Context.<anonymous> (test\\secondTest.js:36:21)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- Learn Selenium\n+ Learn Javascript\n"
              },
              "uuid": "25432048-18a2-42e1-8add-9436f3f85a6b",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c74a075d-ed8a-4b3f-a2e2-82f0df18db0d"
          ],
          "failures": [
            "25432048-18a2-42e1-8add-9436f3f85a6b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 17895,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}